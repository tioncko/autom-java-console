==============================

# Áreas implementadas #

Tela Cadastro:
- Cliente
- Fornecedor
- Usuário
- Produtos e Serviços

==============================

# Áreas pendentes #

Tela Cadastro
- Funcionário
- Carro

Tela Loja
- A definir áreas

==============================

# Soluções para implementar #

[PARTE 1] (18/18)

[OK] Validação de exclusão de item da lista de cada classe "Metodos" [exemplo: código X já foi excluído]
[OK] Incluir condição para impressão da mensagem de saída [sout("Alteração concluida") ou sout("a tabela tá vazia")]
[OK] Aplicar validação nos métodos de localização
[OK] Incluir novo método para validar se o atributo getAtividades da tela de fornecedores está vazia, para assim, permitir o insert
[OK] Revisar ajustes feitos na area de fornecedor para as areas Cliente e Usuario (validId)
[OK] Implementar equals e hashcode para CPF e CNPJ
[OK] Aplicar try/catch em métodos que utilizam "throws Exception"
[OK] Validar se os logs implementados estão funcionando da forma que foi planejada
[OK] Descrição dos métodos [o que são, o que fazem e o que retornam]
[OK] Releitura de nomes de variáveis, métodos e classes [exemplo: Map<Integer, Servicos> x = new HashMap<>(); -> Map<Integer, Servicos> mapServ = new HashMap<>();]
[OK] Alterar o README.md com a imagem atual do projeto e ir atualizando conforme o projeto evolui
[OK] (se possível) aplicar cor fixa nos menus (Cor fixa nos títulos)
[OK] Limpar comentários das classes -> DEFINIR ELES COMO RASCUNHO
[OK] Verificar a possibilidade de criar uma validação de response code na parte do cep [Ajuste feito]
[OK] Inserir fornecedores na lista de produtos
[OK] Criar método para remover e incrementar atividades
[OK] Associar as atividades aos fornecedores
[OK] Necessário mudar a forma de coleta de CEP (atual: via XML, atualizar para: via JSON)

[PARTE 2] (8/11)

[OK] Desenvolver área do funcionário
[OK] Padronizar as opções de Menu em todas as áreas
[OK] Ajustar interfaces para que os métodos não fiquem repetitivos
[OK] Desenvolver área do carro
- Associar o funcionário a seu usuário
[OK] Associar a marca ao carro
- Associar o carro ao cliente
[OK] Criar API/JSON de lista de clientes para consumo
[OK] Criar API/JSON de lista de funcionários para consumo
[OK] Criar API/JSON de lista de carros para consumo
- Incrementar área do carro dentro da area do cliente

==============================

[MEMORANDO] - Criar API/JSON de lista de carros para consumo [CONCLUÍDO]

-> Procedimento para caso o apiCode seja maior do que zero [OK] <-

*GERAR BASE DE CONSULTA*
consome a api de modelos [OK]
consulta a api pelo código do modelo escolhido (Classe Marcas, atributo apiCode) [OK]
retorna um modelo aleatório [OK - FOI MELHOR TRABALHADO]
insere na tabela [OK]

*INSERIR DADOS*
oferecer pesquisa por modelo ou inserir nome direto [OK]
